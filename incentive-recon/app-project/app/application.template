{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "DynamoDB, SQS, Lambda, S3 (with notification)",

  "Parameters": 
  {
        "DynamoReadCapacityUnits": 
        {
           "Description": "Provisioned read throughput",
           "Type": "Number",
           "Default": "1",
           "MinValue": "1",
           "MaxValue": "10000",
           "ConstraintDescription": "must be between 1 and 10000"
        },
        "DynamoWriteCapacityUnits": 
        {
           "Description": "Provisioned write throughput",
           "Type": "Number",
           "Default": "1",
           "MinValue": "1",
           "MaxValue": "10000",
           "ConstraintDescription": "must be between 1 and 10000"
        },
        "namePrefix": {
          "Description": "The name-prefix to be used",
          "Type": "String",
          "MinLength": "1",
          "MaxLength": "300"
        },
       "metaDataBucket": {
          "Description": "code bucket",
          "Type": "String",
          "MinLength": "1",
          "MaxLength": "300"
        },
        "metaDataPath": {
          "Description": "path",
          "Type": "String",
          "MinLength": "1",
          "MaxLength": "300"
        },
        "serviceRole": {
          "Description": "Service Role ARN for resource access",
          "Type": "String",
          "MinLength": "1",
          "MaxLength": "300"
        }
  },

  "Resources": 
  {
    "APIDynamoDBTable": 
    {
       "Type": "AWS::DynamoDB::Table",
         
       "Properties": 
       {
          "AttributeDefinitions": 
          [
               {
                  "AttributeName": "key",
                  "AttributeType": "S"
               }
            ],
            "KeySchema": 
            [
               {
                  "AttributeName": "key",
                  "KeyType": "HASH"
               }
            ],
            "ProvisionedThroughput": 
            {
               "ReadCapacityUnits": { "Ref": "DynamoReadCapacityUnits" },
               "WriteCapacityUnits": { "Ref": "DynamoWriteCapacityUnits" }
            },
            "TableName" : {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "PartnerTransactions"]] }
        }
    },
    "APIDynamoDBTable2": 
    {
         "Type": "AWS::DynamoDB::Table",
         
         "Properties": 
         {
            "AttributeDefinitions": 
            [
               {
                  "AttributeName": "key",
                  "AttributeType": "S"
               }
            ],
            "KeySchema": 
            [
               {
                  "AttributeName": "key",
                  "KeyType": "HASH"
               }
            ],
            "ProvisionedThroughput": 
            {
               "ReadCapacityUnits": { "Ref": "DynamoReadCapacityUnits" },
               "WriteCapacityUnits": { "Ref": "DynamoWriteCapacityUnits" }
            },
            "TableName" : {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "PointsTransactions"]] }
         }
     },
     "IndexerQueue": 
     {
            "Type": "AWS::SQS::Queue",
            "Properties": 
            {
                "QueueName": {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "PointsTransactionKeys"]] }
            }
     },
    "IndexerQueue2": 
     {
            "Type": "AWS::SQS::Queue",
            "Properties": 
            {
                "QueueName": {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "PartnerTransactionKeys"]] }
            }
     },
     "HelloWorldFn": 
     {
          "Type": "AWS::Lambda::Function",
          "DependsOn": ["APIDynamoDBTable", "APIDynamoDBTable2", "IndexerQueue", "IndexerQueue2"],
          "Properties": 
          {
            "Handler": "com.expedia.globalpayments.incentiverecon.PointsHandler",
            "Role": {
              "Ref": "serviceRole"
            },
            "Code": 
            {
               "S3Bucket": 
               {
                 "Ref": "metaDataBucket"
               },
               "S3Key":
               {
                  "Fn::Join": [
                      "/",
                      [
                        {
                          "Ref": "metaDataPath"
                        },   
                        "incentivereconV2-0.1.0-SNAPSHOT.jar"
                      ]
                    ]
               }
            },
            "Runtime": "java8",
            "FunctionName" : {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "PointsConsumerHandler"]] }, 
            "Environment": 
            {
              "Variables" : 
              { 
               "POINTS_QUEUE_URL" : { "Ref": "IndexerQueue" },
               "PARTNER_QUEUE_URL" : { "Ref": "IndexerQueue2" },
               "NAME_PREFIX" : { "Ref": "namePrefix" }
              }
            },
            "MemorySize" : "1024"
          }
    },
    "HelloWorldFn2": 
     {
          "Type": "AWS::Lambda::Function",
          "DependsOn": ["APIDynamoDBTable", "APIDynamoDBTable2", "IndexerQueue", "IndexerQueue2"],
          "Properties": 
          {
            "Handler": "com.expedia.globalpayments.incentiverecon.PartnerHandler",
            "Role": 
            {
              "Ref": "serviceRole"
            },
            "Code": 
            {
               "S3Bucket": 
               {
                 "Ref": "metaDataBucket"
               },
               "S3Key":
               {
                  "Fn::Join": [
                      "/",
                      [
                        {
                          "Ref": "metaDataPath"
                        },   
                        "incentivereconV2-0.1.0-SNAPSHOT.jar"
                      ]
                    ]
               }
            },
            "Runtime": "java8",
            "FunctionName" : {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "PartnerConsumerHandler"]] }, 
            "Environment": 
            {
              "Variables" : 
              { 
               "POINTS_QUEUE_URL" : { "Ref": "IndexerQueue" },
               "PARTNER_QUEUE_URL" : { "Ref": "IndexerQueue2" },
               "NAME_PREFIX" : { "Ref": "namePrefix" }
              }
            },
            "MemorySize" : "1024"
           }
     },
    "bucketperm": 
    {
      "Type": "AWS::Lambda::Permission",
      "Properties" : 
      {
        "Action": "lambda:InvokeFunction",
        "FunctionName" : { "Fn::GetAtt": [ "HelloWorldFn", "Arn" ]},
        "Principal": "s3.amazonaws.com",
        "SourceArn": { "Fn::Join": [":", [
            "arn", "aws", "s3", "" , "", {"Ref" : "mybucket"}]]
        }
      }
    },
    "mybucket": 
    {
      "Type": "AWS::S3::Bucket",
      "Properties":
      {
        "BucketName" : {"Fn::Join": ["", [{"Ref": "namePrefix"}, "-", "irpartnertransactions"]] },
        "NotificationConfiguration": 
        {
           "LambdaConfigurations": [
            {
              "Event" : "s3:ObjectCreated:*",
              "Function" : { "Fn::GetAtt": [ "HelloWorldFn", "Arn" ]}
            }
          ]
        }
      }
    }
  },
  "Outputs": 
    {   
      "Queue": 
      {
         "Value": { "Ref": "IndexerQueue" },
         "Description": "The PointsTransactionKeys Queue"
      },
      "Queue2": 
      {
         "Value": { "Ref": "IndexerQueue2" },
         "Description": "The PartnerTransactionKeys Queue"
      },
      "TableName": 
      {
         "Value": { "Ref": "APIDynamoDBTable" },
         "Description": "The PartnerTransactions table"
      },
      "TableName2": 
      {
         "Value": { "Ref": "APIDynamoDBTable2" },
         "Description": "The PointsTransactions table"
      }
    }
}
